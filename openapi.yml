openapi: 3.0.1
info:
  title: Hathora Cloud API
  version: 0.0.16
paths:
  /app/{appName}/:
    get:
      operationId: AppsService.get
      tags:
        - App
      parameters:
        - name: appName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppName'
          examples:
            Example1:
              value: your-app-name
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResponse'
              examples:
                Example1:
                  value:
                    appId: your-app-id
                    deploymentId: your-deployment-id
                    regionalContainerTags: []
                    containerPort: 100
                    transportType: tcp
                    roomsPerProcess: 10
                    requestedCPU: 32
                    requestedMemoryMB: 4096
                    deployedBy: username
                    deployStartedAt: '2023-01-11T23:14:02+00:00'
                    deployFinishedAt: '2023-01-11T23:14:42+00:00'
                    status: completed
                    secret: app-secret
      summary: Get App
      security: &ref_0
        - BearerAuth: []
  /app/{appName}/logs:
    get:
      operationId: AppsService.logs
      tags:
        - App
      parameters:
        - name: appName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppName'
          examples:
            Example1:
              value: your-app-name
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
              examples:
                Example1:
                  value: |
                    log line 1
                    log line 2
                    log line 3
      summary: Get App logs
      security: *ref_0
  /app/{appName}/delete:
    delete:
      operationId: AppsService.delete
      tags:
        - App
      parameters:
        - name: appName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppName'
          examples:
            Example1:
              value: your-app-name
        - name: forceDestroy
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
              examples:
                Example1:
                  value: Deleted app
      summary: Delete App
      security: *ref_0
  /rooms/create/{appId}:
    post:
      operationId: RoomsService.create
      tags:
        - Room
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppId'
          examples:
            Example1:
              value: your-app-id
        - name: region
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Region'
          examples:
            Example1:
              value: us-east-1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoomResponse'
              examples:
                Example1:
                  value:
                    roomId: your-room-id
                    host: https://www.your-host.com
                    port: 435
      summary: Create Room
      security: *ref_0
  /rooms/connect/{appId}/{roomId}:
    post:
      operationId: RoomsService.connect
      tags:
        - Room
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppId'
          examples:
            Example1:
              value: your-app-id
        - name: roomId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RoomId'
          examples:
            Example1:
              value: your-room-id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectToRoomResponse'
              examples:
                Example1:
                  value:
                    host: https://www.your-host.com
                    port: 435
      summary: Connect Room
      security: *ref_0
  /rooms/suspense/{appId}/{roomId}:
    delete:
      operationId: RoomsService.suspend
      tags:
        - Room
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppId'
          examples:
            Example1:
              value: your-app-id
        - name: roomId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RoomId'
          examples:
            Example1:
              value: your-room-id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuspendRoomResponse'
              examples:
                Example1:
                  value:
                    suspended: true
      summary: Suspend Room
      security: *ref_0
  /rooms/destory/{appId}/{roomId}:
    delete:
      operationId: RoomsService.destroy
      tags:
        - Room
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppId'
          examples:
            Example1:
              value: your-app-id
        - name: roomId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RoomId'
          examples:
            Example1:
              value: your-room-id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestroyRoomResponse'
              examples:
                Example1:
                  value:
                    destroyed: true
      summary: Destroy Room
      security: *ref_0
components:
  schemas:
    GetAppResponse:
      type: object
      properties:
        secret:
          type: string
          example: app-secret
      required:
        - secret
      allOf:
        - $ref: '#/components/schemas/Deployment'
    AppId:
      type: string
    AppName:
      type: string
    RoomId:
      type: string
    DeploymentId:
      type: string
    Region:
      type: string
      enum:
        - ap-northeast-3
        - af-south-1
        - ap-east-1
        - ap-northeast-1
        - ap-northeast-2
        - ap-south-1
        - ap-south-2
        - ap-southeast-1
        - ap-southeast-2
        - ap-southeast-3
        - ca-central-1
        - eu-central-1
        - eu-central-2
        - eu-north-1
        - eu-south-1
        - eu-south-2
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - me-central-1
        - me-south-1
        - sa-east-1
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
    Deployment:
      type: object
      properties:
        appId:
          $ref: '#/components/schemas/AppId'
        deploymentId:
          $ref: '#/components/schemas/DeploymentId'
        regionalContainerTags:
          type: array
          items:
            $ref: '#/components/schemas/RegionalContainerTags'
        containerPort:
          type: integer
        transportType:
          $ref: '#/components/schemas/TransportType'
        roomsPerProcess:
          type: integer
        requestedCPU:
          type: integer
        requestedMemoryMB:
          type: integer
        deployedBy:
          type: string
        deployStartedAt:
          type: string
          format: date-time
        deployFinishedAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/DeploymentStatus'
      required:
        - appId
        - deploymentId
        - regionalContainerTags
        - containerPort
        - transportType
        - roomsPerProcess
        - requestedCPU
        - requestedMemoryMB
        - deployedBy
        - deployStartedAt
        - status
    RegionalContainerTags:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/Region'
        containerTag:
          type: string
      required:
        - region
        - containerTag
    TransportType:
      type: string
      enum:
        - tcp
        - udp
    DeploymentStatus:
      type: string
      enum:
        - running
        - completed
        - failed
    CreateRoomResponse:
      type: object
      properties:
        roomId:
          $ref: '#/components/schemas/RoomId'
        host:
          type: string
          example: https://www.your-host.com
        port:
          type: integer
          example: 435
      required:
        - roomId
        - host
        - port
    ConnectToRoomResponse:
      type: object
      properties:
        host:
          type: string
          example: https://www.your-host.com
        port:
          type: integer
          example: 435
      required:
        - host
        - port
    SuspendRoomResponse:
      type: object
      properties:
        suspended:
          type: boolean
          example: true
      required:
        - suspended
    DestroyRoomResponse:
      type: object
      properties:
        destroyed:
          type: boolean
          example: true
      required:
        - destroyed
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://cloud.hathora.dev/v1/
    description: Production
